{"version":3,"sources":["components/Note.jsx","config/api.js","components/Notelist.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Note","data","del","edit","confirm","Modal","useState","editview","setEditview","text","newData","setNewData","delNote","a","title","icon","DeleteOutlined","content","onOk","_id","style","li","display","justifyContent","alignItems","margin","color","padding","minHeight","whiteSpace","verticalAlign","borderBottom","noteText","marginRight","actions_wrap","height","marginleft","actions","cursor","backgroundColor","borderRadius","EditOutlined","onClick","placement","closable","visible","onClose","className","rows","cols","name","defaultValue","onChange","event","target","value","type","preventDefault","length","message","error","baseURL","window","location","protocol","host","NoteList","notes","actionsError","msg","actionsMsg","success","deleteNote","noteID","axios","delete","then","res","catch","err","editNote","reqdata","put","headers","map","note","HomePage","loading","setLoading","newnote","setNewnote","loaded","allnotes","setAllnotes","useEffect","get","console","onSubmit","post","log","placeholder","active","App","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df3fe088.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport { Modal, Drawer, message } from 'antd'\r\n\r\n\r\n\r\nconst Note = ({ data, del, edit }) => {\r\n\r\n    const { confirm } = Modal\r\n\r\n    // edit drawer\r\n    const [editview, setEditview] = useState(false)\r\n    const closeEditView = () => setEditview(false)\r\n    const openEditView = () => setEditview(true)\r\n\r\n    const [newData, setNewData] = useState({ text: '' })\r\n    const onchangeText = (event) => {\r\n        setNewData({\r\n            ...newData,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    // actions handle\r\n    const delNote = async () => {\r\n        // del(data._id)\r\n        confirm({\r\n            title: 'Are you sure?',\r\n            icon: <DeleteOutlined />,\r\n            content: 'You want to delete this note. Then click OK',\r\n            onOk() {\r\n                del(data._id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const editNote = (event) => {\r\n        event.preventDefault()\r\n        // edit(data._id, newData)\r\n        if (newData.text.length < 2) {\r\n            // error\r\n            message.error('Error! it can\\'t be empty or less that 2 characters')\r\n        }\r\n        else {\r\n            // procced\r\n            // message.success('Note updated...!')\r\n            edit(data._id, newData)\r\n        }\r\n    }\r\n\r\n\r\n    // styles\r\n    const style = {\r\n        li: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            margin: '10px 0',\r\n            color: '#343434',\r\n            padding: '5px 10px',\r\n            minHeight: '40px',\r\n            whiteSpace: 'pre-line',\r\n            verticalAlign: 'bottom',\r\n            borderBottom: '1px solid #CCDEFD'\r\n        },\r\n        noteText: {\r\n            marginRight: '5px'\r\n        },\r\n        actions_wrap: {\r\n            display: 'inline-block',\r\n            height: '100%',\r\n            marginleft: '6px'\r\n        },\r\n        actions: {\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            margin: '5px',\r\n            cursor: 'pointer',\r\n            color: '#FFFFFF',\r\n            backgroundColor: '#5175EB',\r\n            padding: '8px',\r\n            borderRadius: '50%'\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <li style={style.li}>\r\n                <span style={style.noteText}><i>{ data.text }</i></span>\r\n                <span style={style.actions_wrap}>\r\n                    <span style={style.actions}>\r\n                        <EditOutlined onClick={ openEditView } />\r\n                    </span>\r\n                    <span style={style.actions}>\r\n                        <DeleteOutlined onClick={ delNote } />\r\n                    </span>\r\n                </span>\r\n            </li>\r\n\r\n            <Drawer \r\n                placement={'right'}\r\n                closable={true}\r\n                title=\"Edit Note\"\r\n                visible={editview}\r\n                onClose={closeEditView}\r\n            >\r\n             <textarea className=\"list_edit\" rows={15} cols={27} name=\"text\" defaultValue={data.text} onChange={onchangeText} />\r\n             <br />\r\n             <button type=\"submit\" className=\"btn_main\" onClick={editNote}>Update</button>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Note","const currentENV = process.env.NODE_ENV\r\n\r\n\r\nif ( currentENV === 'development' ) {\r\n    var baseURL = 'http://localhost:3083/api'\r\n} else {\r\n    var baseURL = window.location.protocol+ '//' + window.location.host + '/api'\r\n}\r\n\r\nexport {\r\n    baseURL\r\n}","import React from 'react'\r\nimport Note from './Note'\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { baseURL } from '../config/api'\r\n\r\nconst NoteList = ({ notes, actions }) => {\r\n\r\n    // message alerts\r\n    const actionsError = (msg) => {\r\n        message.error(msg)\r\n    }\r\n\r\n    const actionsMsg = (msg) => {\r\n        message.success(msg)\r\n    }\r\n\r\n    // actions\r\n    const deleteNote = async (noteID) => {\r\n        await axios.delete( baseURL + '/del/' + noteID )\r\n        .then(res => {\r\n            actions()\r\n            actionsMsg(res.data.msg)\r\n        })\r\n        .catch(err => {\r\n            // console.log('Error: ' + err.message)\r\n            actionsError(err.message)\r\n        })\r\n    }\r\n\r\n    const editNote = async (noteID, reqdata) => {\r\n        await axios.put( baseURL + '/edit/' + noteID, reqdata, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        } )\r\n        .then(res => {\r\n            actions()\r\n            actionsMsg(res.data.msg)\r\n        })\r\n        .catch(err => {\r\n            // console.log('Error: ' + err.message)\r\n            actionsError(err.message)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                notes.map(note => (\r\n                    <Note key={note._id} data={note} del={deleteNote} edit={editNote} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NoteList","import React, { useState, useEffect } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {\r\n    message,\r\n    Skeleton\r\n} from 'antd'\r\n\r\n\r\nimport NoteList from './../components/Notelist'\r\n\r\nimport { baseURL } from '../config/api'\r\n\r\nconst HomePage = () => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const setReload = () => setLoading(true)\r\n\r\n    const [newnote, setNewnote] = useState({ text: '' })\r\n\r\n    const [allnotes, setAllnotes] = useState({\r\n        loaded: false,\r\n        data: null\r\n    })\r\n\r\n    const resetThisNote = () => setNewnote({ text: '' })\r\n\r\n    const onChangeThisNote = (event) => {\r\n        setNewnote({\r\n            ...newnote,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const sendNewNote = (event) => {\r\n        event.preventDefault()\r\n        // send create request\r\n        axios.post(baseURL + '/create', newnote, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setLoading(true)\r\n        })\r\n        .catch(err => {\r\n            console.log('Error : ' + err.message)\r\n        })\r\n        // reset\r\n        resetThisNote()\r\n    }\r\n\r\n    // fetch all notes\r\n    useEffect(() => {\r\n        if (loading) {\r\n            // reset not loaded\r\n            setAllnotes({\r\n                ...allnotes,\r\n                loaded: false\r\n            })\r\n\r\n            axios.get(baseURL + '/all')\r\n            .then(res => {\r\n                // set updated data\r\n                setAllnotes({\r\n                    ...allnotes,\r\n                    loaded: true,\r\n                    data: res.data.notes\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n            })\r\n\r\n            setLoading(false)\r\n        }\r\n    }, [loading])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-wrapper\">\r\n                <h2>Note Keeper</h2>\r\n                <div className=\"page-container\">\r\n                    <form onSubmit={ sendNewNote }>\r\n                        <textarea rows={10} cols={50} placeholder=\"Write a new note\" name=\"text\" onChange={ onChangeThisNote } value={ newnote.text }></textarea>\r\n                        <button className=\"btn_main\" type=\"submit\">\r\n                            {\r\n                                loading ? ('Please wait') : ('Add Note')\r\n                            }\r\n                        </button>\r\n                        <hr />\r\n                    </form>\r\n                    <div className=\"all_notes\">\r\n                        <ul>\r\n                            {\r\n                                allnotes.loaded ? (\r\n                                    allnotes.data &&  allnotes.data.length > 0 ? (\r\n                                        <NoteList notes={allnotes.data} actions={setReload} />\r\n                                    ) : (\r\n                                        <li>Empty notes! Please create one</li>\r\n                                    )\r\n                                ) : (\r\n                                    <Skeleton active />\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","// import logo from './logo.svg'\nimport './App.css'\n\n// import Routers from './Routers'\n\nimport \"antd/dist/antd.css\"\nimport HomePage from './pages/Home'\n\nfunction App() {\n  return (\n    <>\n      <HomePage />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}